<h2>Templates and Modules</h2>
aka partials or views

<h3>Templates and cfinclude</h3>
use the &lt;cfinclude&gt; tag to include another cfml file.
files intended as include files are typically named with a ".inc" extension.

<pre>&lt;cfinclude template="includefile.inc" /&gt;</pre>

<h3>Modules and cfmodule</h3>
use the &lt;cfmodule&gt; tag to include another cfml file and pass in values via tag attributes.

<pre>&lt;cfmodule template="includefile.inc" arg1="val1" arg2="val2" /&gt;</pre>

Meanwhile in includefile.inc...

<pre>
we can output stuff from the attributes like so: &lt;cfoutput&gt;#attributes.val1#&lt;/cfoutput&gt;
</pre>

<h3>The various execution modes of modules</h3>
<pre>
&lt;!--- start mode ---&gt;
&lt;cfif thistag.executionmode == "start"&gt;
	&lt;!--- set up data for tag, or some opening markup ---&gt;
&lt;/cfif&gt;

&lt;!--- end mode, or there is no end tag ---&gt;
&lt;cfif thistag.executionmode == "end" || !thistag.hasEndTag&gt;
	&lt;!--- output the rest of the desired content for the tag ---&gt;
&lt;/cfif&gt;
</pre>

Things to consider:
<ul>
	<li>when using cfmodule, the include template is processed twice, once start, and once on end</li>
	<li>if self closing the cfmodule tag, then the start and end modes will occur</li>
	<li>if not self closed, only the start mode will occur</li>
</ul>